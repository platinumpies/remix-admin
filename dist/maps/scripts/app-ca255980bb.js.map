{"version":3,"sources":["scripts/app-ca255980bb.js"],"names":["angular","module","webDevTec","getTec","data","title","url","description","logo","this","service","acmeNavbar","NavbarController","moment","vm","relativeDate","creationDate","fromNow","directive","restrict","templateUrl","scope","controller","controllerAs","bindToController","$inject","acmeMalarkey","malarkey","linkFunc","el","attr","watcher","typist","typeSpeed","deleteSpeed","pauseDelay","loop","postfix","addClass","forEach","extraValues","value","type","pause","$watch","contributors","contributor","login","$on","MalarkeyController","$log","githubContributor","activate","getContributors","then","info","template","link","$http","limit","getContributorsComplete","response","getContributorsFailed","error","toJson","get","apiHost","factory","$q","$rootScope","Preloader","imageLocations","imageCount","length","loadCount","errorCount","states","PENDING","LOADING","RESOLVED","REJECTED","state","deferred","defer","promise","preloadImages","preloader","load","prototype","constructor","isInitiated","isRejected","isResolved","i","loadImageLocation","handleImageError","imageLocation","reject","handleImageLoad","notify","percent","Math","ceil","resolve","image","$","Image","event","$apply","target","src","prop","MainController","$timeout","toastr","cfpLoadingBar","getWebDevTec","classAnimation","showToastr","awesomeThings","awesomeThing","rank","random","toggle","runBlock","debug","run","routeConfig","$routeProvider","when","otherwise","redirectTo","config","constant","$logProvider","toastrConfig","debugEnabled","allowHtml","timeOut","positionClass","preventDuplicates","progressBar","$templateCache","put"],"mappings":"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","file":"scripts/app-ca255980bb.js","sourcesContent":["(function() {\n  'use strict';\n\n  angular\n    .module('remixAdmin', ['ngAnimate', 'ngCookies', 'ngTouch', 'ngSanitize', 'ngMessages', 'ngAria', 'ngResource', 'ngRoute', 'toastr', 'angular-circular-progress', 'angular-svg-round-progress', 'angular-loading-bar', 'chieffancypants.loadingBar']);\n\n})();\n\n(function() {\n  'use strict';\n\n  angular\n      .module('remixAdmin')\n      .service('webDevTec', webDevTec);\n\n  /** @ngInject */\n  function webDevTec() {\n    var data = [\n      {\n        'title': 'AngularJS',\n        'url': 'https://angularjs.org/',\n        'description': 'HTML enhanced for web apps!',\n        'logo': 'angular.png'\n      },\n      {\n        'title': 'BrowserSync',\n        'url': 'http://browsersync.io/',\n        'description': 'Time-saving synchronised browser testing.',\n        'logo': 'browsersync.png'\n      },\n      {\n        'title': 'GulpJS',\n        'url': 'http://gulpjs.com/',\n        'description': 'The streaming build system.',\n        'logo': 'gulp.png'\n      },\n      {\n        'title': 'Jasmine',\n        'url': 'http://jasmine.github.io/',\n        'description': 'Behavior-Driven JavaScript.',\n        'logo': 'jasmine.png'\n      },\n      {\n        'title': 'Karma',\n        'url': 'http://karma-runner.github.io/',\n        'description': 'Spectacular Test Runner for JavaScript.',\n        'logo': 'karma.png'\n      },\n      {\n        'title': 'Protractor',\n        'url': 'https://github.com/angular/protractor',\n        'description': 'End to end test framework for AngularJS applications built on top of WebDriverJS.',\n        'logo': 'protractor.png'\n      },\n      {\n        'title': 'Bootstrap',\n        'url': 'http://getbootstrap.com/',\n        'description': 'Bootstrap is the most popular HTML, CSS, and JS framework for developing responsive, mobile first projects on the web.',\n        'logo': 'bootstrap.png'\n      },\n      {\n        'title': 'Sass (Node)',\n        'url': 'https://github.com/sass/node-sass',\n        'description': 'Node.js binding to libsass, the C version of the popular stylesheet preprocessor, Sass.',\n        'logo': 'node-sass.png'\n      }\n    ];\n\n    this.getTec = getTec;\n\n    function getTec() {\n      return data;\n    }\n  }\n\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('remixAdmin')\n    .directive('acmeNavbar', acmeNavbar);\n\n  /** @ngInject */\n  function acmeNavbar() {\n    var directive = {\n      restrict: 'E',\n      templateUrl: 'app/components/navbar/navbar.html',\n      scope: {\n          creationDate: '='\n      },\n      controller: NavbarController,\n      controllerAs: 'vm',\n      bindToController: true\n    };\n\n    return directive;\n\n    /** @ngInject */\n    function NavbarController(moment) {\n      var vm = this;\n\n      // \"vm.creation\" is avaible by directive option \"bindToController: true\"\n      vm.relativeDate = moment(vm.creationDate).fromNow();\n    }\n  }\n\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('remixAdmin')\n    .directive('acmeMalarkey', acmeMalarkey);\n\n  /** @ngInject */\n  function acmeMalarkey(malarkey) {\n    var directive = {\n      restrict: 'E',\n      scope: {\n        extraValues: '='\n      },\n      template: '&nbsp;',\n      link: linkFunc,\n      controller: MalarkeyController,\n      controllerAs: 'vm'\n    };\n\n    return directive;\n\n    function linkFunc(scope, el, attr, vm) {\n      var watcher;\n      var typist = malarkey(el[0], {\n        typeSpeed: 40,\n        deleteSpeed: 40,\n        pauseDelay: 800,\n        loop: true,\n        postfix: ' '\n      });\n\n      el.addClass('acme-malarkey');\n\n      angular.forEach(scope.extraValues, function(value) {\n        typist.type(value).pause().delete();\n      });\n\n      watcher = scope.$watch('vm.contributors', function() {\n        angular.forEach(vm.contributors, function(contributor) {\n          typist.type(contributor.login).pause().delete();\n        });\n      });\n\n      scope.$on('$destroy', function () {\n        watcher();\n      });\n    }\n\n    /** @ngInject */\n    function MalarkeyController($log, githubContributor) {\n      var vm = this;\n\n      vm.contributors = [];\n\n      activate();\n\n      function activate() {\n        return getContributors().then(function() {\n          $log.info('Activated Contributors View');\n        });\n      }\n\n      function getContributors() {\n        return githubContributor.getContributors(10).then(function(data) {\n          vm.contributors = data;\n\n          return vm.contributors;\n        });\n      }\n    }\n\n  }\n\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('remixAdmin')\n    .factory('githubContributor', githubContributor);\n\n  /** @ngInject */\n  function githubContributor($log, $http) {\n    var apiHost = 'https://api.github.com/repos/Swiip/generator-gulp-angular';\n\n    var service = {\n      apiHost: apiHost,\n      getContributors: getContributors\n    };\n\n    return service;\n\n    function getContributors(limit) {\n      if (!limit) {\n        limit = 30;\n      }\n\n      return $http.get(apiHost + '/contributors?per_page=' + limit)\n        .then(getContributorsComplete)\n        .catch(getContributorsFailed);\n\n      function getContributorsComplete(response) {\n        return response.data;\n      }\n\n      function getContributorsFailed(error) {\n        $log.error('XHR Failed for getContributors.\\n' + angular.toJson(error.data, true));\n      }\n    }\n  }\n})();\n\nangular\n    .module('remixAdmin')\n    .factory(\n            \"preloader\",\n            function( $q, $rootScope ) {\n                // I manage the preloading of image objects. Accepts an array of image URLs.\n                function Preloader( imageLocations ) {\n                    // I am the image SRC values to preload.\n                    this.imageLocations = imageLocations;\n                    // As the images load, we'll need to keep track of the load/error\n                    // counts when announing the progress on the loading.\n                    this.imageCount = this.imageLocations.length;\n                    this.loadCount = 0;\n                    this.errorCount = 0;\n                    // I am the possible states that the preloader can be in.\n                    this.states = {\n                        PENDING: 1,\n                        LOADING: 2,\n                        RESOLVED: 3,\n                        REJECTED: 4\n                    };\n                    // I keep track of the current state of the preloader.\n                    this.state = this.states.PENDING;\n                    // When loading the images, a promise will be returned to indicate\n                    // when the loading has completed (and / or progressed).\n                    this.deferred = $q.defer();\n                    this.promise = this.deferred.promise;\n                }\n                // ---\n                // STATIC METHODS.\n                // ---\n                // I reload the given images [Array] and return a promise. The promise\n                // will be resolved with the array of image locations.\n                Preloader.preloadImages = function( imageLocations ) {\n                    var preloader = new Preloader( imageLocations );\n                    return( preloader.load() );\n                };\n                // ---\n                // INSTANCE METHODS.\n                // ---\n                Preloader.prototype = {\n                    // Best practice for \"instnceof\" operator.\n                    constructor: Preloader,\n                    // ---\n                    // PUBLIC METHODS.\n                    // ---\n                    // I determine if the preloader has started loading images yet.\n                    isInitiated: function isInitiated() {\n                        return( this.state !== this.states.PENDING );\n                    },\n                    // I determine if the preloader has failed to load all of the images.\n                    isRejected: function isRejected() {\n                        return( this.state === this.states.REJECTED );\n                    },\n                    // I determine if the preloader has successfully loaded all of the images.\n                    isResolved: function isResolved() {\n                        return( this.state === this.states.RESOLVED );\n                    },\n                    // I initiate the preload of the images. Returns a promise.\n                    load: function load() {\n                        // If the images are already loading, return the existing promise.\n                        if ( this.isInitiated() ) {\n                            return( this.promise );\n                        }\n                        this.state = this.states.LOADING;\n                        for ( var i = 0 ; i < this.imageCount ; i++ ) {\n                            this.loadImageLocation( this.imageLocations[ i ] );\n                        }\n                        // Return the deferred promise for the load event.\n                        return( this.promise );\n                    },\n                    // ---\n                    // PRIVATE METHODS.\n                    // ---\n                    // I handle the load-failure of the given image location.\n                    handleImageError: function handleImageError( imageLocation ) {\n                        this.errorCount++;\n                        // If the preload action has already failed, ignore further action.\n                        if ( this.isRejected() ) {\n                            return;\n                        }\n                        this.state = this.states.REJECTED;\n                        this.deferred.reject( imageLocation );\n                    },\n                    // I handle the load-success of the given image location.\n                    handleImageLoad: function handleImageLoad( imageLocation ) {\n                        this.loadCount++;\n                        // If the preload action has already failed, ignore further action.\n                        if ( this.isRejected() ) {\n                            return;\n                        }\n                        // Notify the progress of the overall deferred. This is different\n                        // than Resolving the deferred - you can call notify many times\n                        // before the ultimate resolution (or rejection) of the deferred.\n                        this.deferred.notify({\n                            percent: Math.ceil( this.loadCount / this.imageCount * 100 ),\n                            imageLocation: imageLocation\n                        });\n                        // If all of the images have loaded, we can resolve the deferred\n                        // value that we returned to the calling context.\n                        if ( this.loadCount === this.imageCount ) {\n                            this.state = this.states.RESOLVED;\n                            this.deferred.resolve( this.imageLocations );\n                        }\n                    },\n                    // I load the given image location and then wire the load / error\n                    // events back into the preloader instance.\n                    // --\n                    // NOTE: The load/error events trigger a $digest.\n                    loadImageLocation: function loadImageLocation( imageLocation ) {\n                        var preloader = this;\n                        // When it comes to creating the image object, it is critical that\n                        // we bind the event handlers BEFORE we actually set the image\n                        // source. Failure to do so will prevent the events from proper\n                        // triggering in some browsers.\n                        var image = $( new Image() )\n                            .load(\n                                function( event ) {\n                                    // Since the load event is asynchronous, we have to\n                                    // tell AngularJS that something changed.\n                                    $rootScope.$apply(\n                                        function() {\n                                            preloader.handleImageLoad( event.target.src );\n                                            // Clean up object reference to help with the\n                                            // garbage collection in the closure.\n                                            preloader = image = event = null;\n                                        }\n                                    );\n                                }\n                            )\n                            .error(\n                                function( event ) {\n                                    // Since the load event is asynchronous, we have to\n                                    // tell AngularJS that something changed.\n                                    $rootScope.$apply(\n                                        function() {\n                                            preloader.handleImageError( event.target.src );\n                                            // Clean up object reference to help with the\n                                            // garbage collection in the closure.\n                                            preloader = image = event = null;\n                                        }\n                                    );\n                                }\n                            )\n                            .prop( \"src\", imageLocation )\n                        ;\n                    }\n                };\n                // Return the factory instance.\n                return( Preloader );\n            }\n        );\n\n(function() {\n  'use strict';\n\n  angular\n    .module('remixAdmin')\n    .controller('MainController', MainController);\n\n  /** @ngInject */\n  function MainController($timeout, webDevTec, toastr, preloader, cfpLoadingBar, $q, $log, $rootScope) {\n    var vm = this;\n    vm.toggle = true;\n\n    vm.awesomeThings = [];\n    vm.classAnimation = '';\n    vm.creationDate = 1447798239285;\n    vm.showToastr = showToastr;\n    \n    vm.imageLocations = [\n                    \"/assets/images/effects-background-faded.png\",\n                    \"/assets/images/vocal-background-faded.png\",\n                    \"/assets/images/eq-background-faded.png\",\n                    \"/assets/images/bass-background-faded.png\",\n                    \"/assets/images/random-background-faded.png\",\n                    \"/assets/images/melody-background-faded.png\",\n                    \"/assets/images/random-icon.png\",\n                    \"/assets/images/bass-icon.png\",\n                    \"/assets/images/vocal-icon.png\",\n                    \"/assets/images/eq-icon.png\",\n                    \"/assets/images/effects-icon.png\",\n                    \"/assets/images/melody-icon.png\",\n                    \"/assets/images/user.png\",\n                    \"/assets/images/smirnoff-logo.png\"\n\n      ];\n      // Preload the images; then, update display when returned.\n     preloader.preloadImages( vm.imageLocations )\n   \n    activate();\n\n    function activate() {\n      getWebDevTec();\n      $timeout(function() {\n        vm.classAnimation = 'rubberBand';\n      }, 4000);\n    }\n\n    function showToastr() {\n      toastr.info('Fork <a href=\"https://github.com/Swiip/generator-gulp-angular\" target=\"_blank\"><b>generator-gulp-angular</b></a>');\n      vm.classAnimation = '';\n    }\n\n    function getWebDevTec() {\n      vm.awesomeThings = webDevTec.getTec();\n\n      angular.forEach(vm.awesomeThings, function(awesomeThing) {\n        awesomeThing.rank = Math.random();\n      });\n    }\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('remixAdmin')\n    .run(runBlock);\n\n  /** @ngInject */\n  function runBlock($log) {\n\n    $log.debug('runBlock end');\n  }\n\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('remixAdmin')\n    .config(routeConfig);\n\n  function routeConfig($routeProvider) {\n    $routeProvider\n      .when('/', {\n        templateUrl: 'app/main/main.html',\n        controller: 'MainController',\n        controllerAs: 'main'\n      })\n      .otherwise({\n        redirectTo: '/'\n      });\n     // })\n     // .when('/finalScreen', {\n     //    templateUrl: 'app/main/finalScreen.html',\n     //    controller: 'finalScreenController'  \n     // });\n  }\n\n // app.controller('finalScreenController', function($scope) {\n //   $scope.pageClass = 'finalScreenController';\n                \n//});\n\n})();\n\n/* global malarkey:false, moment:false */\n(function() {\n  'use strict';\n\n  angular\n    .module('remixAdmin')\n    .constant('malarkey', malarkey)\n    .constant('moment', moment);\n\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('remixAdmin')\n    .config(config);\n\n  /** @ngInject */\n  function config($logProvider, toastrConfig) {\n    // Enable log\n    $logProvider.debugEnabled(true);\n\n    // Set options third-party lib\n    toastrConfig.allowHtml = true;\n    toastrConfig.timeOut = 3000;\n    toastrConfig.positionClass = 'toast-top-right';\n    toastrConfig.preventDuplicates = true;\n    toastrConfig.progressBar = true;\n  }\n\n})();\n\nangular.module(\"remixAdmin\").run([\"$templateCache\", function($templateCache) {$templateCache.put(\"app/main/finalScreen.html\",\"<div class=\\\"container grey-fill stop-scale\\\"></div>\");\n$templateCache.put(\"app/main/main.html\",\"<html ng-app\\\"remixadmin\\\"=\\\"\\\"><div class=\\\"container grey-fill stop-scale\\\"><div><acme-navbar creation-date=\\\"main.creationDate\\\"></acme-navbar></div><div class=\\\"fixer-margin\\\"><div class=\\\"main-wrap\\\"><div class=\\\"wrap\\\"><div class=\\\"nba-circular-crop\\\"><div class=\\\"videoWrapper\\\"><video id=\\\"Video5\\\" loop=\\\"\\\" muted=\\\"\\\" preload=\\\"auto\\\"><source src=\\\"/assets/videos/remix-vid-5_converted.mp4\\\" type=\\\"video/mp4\\\"></video><video id=\\\"Video4\\\" loop=\\\"\\\" muted=\\\"\\\" preload=\\\"auto\\\"><source src=\\\"/assets/videos/remix-vid-4_converted.mp4\\\" type=\\\"video/mp4\\\"></video><video id=\\\"Video3\\\" loop=\\\"\\\" muted=\\\"\\\" preload=\\\"auto\\\"><source src=\\\"/assets/videos/remix-vid-3_converted.mp4\\\" type=\\\"video/mp4\\\"></video><video id=\\\"Video2\\\" loop=\\\"\\\" muted=\\\"\\\" preload=\\\"auto\\\"><source src=\\\"/assets/videos/remix-vid-2_converted.mp4\\\" type=\\\"video/mp4\\\"></video><video id=\\\"Video1\\\" loop=\\\"\\\" muted=\\\"\\\" preload=\\\"auto\\\"><source src=\\\"/assets/videos/remix-vid-1_converted.mp4\\\" type=\\\"video/mp4\\\"></video><div round-progress=\\\"\\\" max=\\\"50\\\" current=\\\"50\\\" color=\\\"#ff3e3e\\\" bgcolor=\\\"#ffffff\\\" radius=\\\"400\\\" stroke=\\\"25\\\" semi=\\\"false\\\" rounded=\\\"false\\\" clockwise=\\\"true\\\" responsive=\\\"true\\\" duration=\\\"60000\\\" animation=\\\"linearEase\\\"></div></div></div><div class=\\\"buttons-buttom\\\" ng-click\\\"toggle=\\'!toggle\\\"\\'><a class=\\\"deg0 track\\\" href=\\\"/assets/sounds/arp.wav\\\" preload=\\\"auto\\\"><div class=\\\"round-button\\\" onclick=\\\"vidplay()\\\"><div class=\\\"round-button-random\\\"><span class=\\\"random-icon btn-hover\\\"><span class=\\\"btn-text-pos\\\">Random</span></span></div></div></a> <a class=\\\"deg45 track\\\" href=\\\"/assets/sounds/vox.wav\\\" preload=\\\"auto\\\"><div class=\\\"round-button\\\" onclick=\\\"vidplay()\\\"><div class=\\\"round-button-vocal\\\"><span class=\\\"vocal-icon btn-hover\\\"><span class=\\\"btn-text-pos\\\">Vocal</span></span></div></div></a> <a class=\\\"deg135 track\\\" href=\\\"/assets/sounds/bass.wav\\\" preload=\\\"auto\\\"><div class=\\\"round-button\\\" onclick=\\\"vidplay()\\\"><div class=\\\"round-button-bass\\\"><span class=\\\"bass-icon btn-hover\\\"><span class=\\\"btn-text-pos\\\">Bass</span></span></div></div></a> <a class=\\\"deg180 track\\\" href=\\\"/assets/sounds/drums.wav\\\" preload=\\\"auto\\\"><div class=\\\"round-button\\\" onclick=\\\"vidplay()\\\"><div class=\\\"round-button-effects\\\"><span class=\\\"effects-icon btn-hover\\\"><span class=\\\"btn-text-pos\\\">Beat</span></span></div></div></a> <a class=\\\"deg225 track\\\" href=\\\"/assets/sounds/synth.wav\\\" preload=\\\"auto\\\"><div class=\\\"round-button\\\" onclick=\\\"vidplay()\\\"><div class=\\\"round-button-melody\\\"><span class=\\\"melody-icon btn-hover\\\"><span class=\\\"btn-text-pos\\\">Melody</span></span></div></div></a> <a class=\\\"deg315 track\\\" href=\\\"/assets/sounds/perc.wav\\\" preload=\\\"auto\\\"><div class=\\\"round-button\\\" onclick=\\\"vidplay()\\\"><div class=\\\"round-button-eq\\\"><span class=\\\"eq-icon btn-hover\\\"><span class=\\\"btn-text-pos\\\">Perc</span></span></div></div></a></div></div></div><div class=\\\"user-position\\\"><div class=\\\"user\\\"><div class=\\\"left-side-wrap\\\"><p class=\\\"dj\\\">DJ</p><span class=\\\"name\\\">@TomLA232</span></div></div></div><div class=\\\"branding-position\\\"><div class=\\\"branding\\\"><div class=\\\"right-side-wrap\\\"><span class=\\\"nike-text\\\"></span><span class=\\\"nba-text\\\">Smirnoff</span><span class=\\\"remix-text\\\">Remix</span></div></div></div></div></div><script>\\n  /*--------------------FIND BETTER APPROACH--------------------*/\\n$(\\'.round-button-melody, .round-button-effects, .round-button-random, .round-button-eq, .round-button-bass, .round-button-vocal\\').on(\\'click\\', function(e){\\n  e.preventDefault();\\n  $(this).css(\\'border-color\\', \\'#ff3e3e\\');\\n});\\n\\n/*\\n$(\\'.round-button-effects\\').on(\\'click\\', function(e){\\n      e.preventDefault();\\n      $(this).toggleClass(\\'myClickState\\');\\n    }); */\\n\\n  </script><script>\\n\\n/*------------------------------------------------MOVE INTO SEPERATE FILE---------------------------------------------------*/\\n\\n/*var audio = {\\n        buffer: {},\\n        compatibility: {},\\n        files: [\\n            \\'sounds/drums.wav\\',\\n            \\'sounds/bass.wav\\',\\n            \\'sounds/arp.wav\\',\\n            \\'sounds/perc.wav\\',\\n            \\'sounds/synth.wav\\',\\n            \\'sounds/vox.wav\\'\\n        ],\\n        proceed: true,\\n        source_loop: {},\\n        source_once: {}\\n    };*/\\n\\n\\nwindow.AudioContext = window.AudioContext || window.webkitAudioContext;\\n\\nvar offset = 0;\\nvar context = new AudioContext();\\nvar source;  \\nvar tempo = 2.0;\\nvar tracksPlayed = [];\\n\\nfunction findAndStopSourceIfPlaying (url) {\\n  if(tracksPlayed.length === 0) {return;}\\n\\n  var index;\\n  var playingTrack = tracksPlayed.filter(function(track, i) {\\n    if(track.responseURL === url) {\\n      index = i;\\n      return track;\\n    }\\n  });\\n\\n  if (playingTrack.length === 1) {\\n    playingTrack[0].source.stop();\\n    tracksPlayed.splice(index,1);\\n    return true;\\n  }\\n\\n  return false;\\n}\\n\\nfunction playTrack(url) {\\n  var request = new XMLHttpRequest();\\n  request.open(\\'GET\\', url, true);\\n  request.responseType = \\'arraybuffer\\';\\n\\n  var audiobuffer;\\n\\n  // Decode asynchronously\\n  request.onload = function() {\\n    \\n    if (request.status == 200) {\\n      \\n      context.decodeAudioData(request.response, function(buffer) {\\n        // if the track is playing stop it and exit from function\\n        if(findAndStopSourceIfPlaying(request.responseURL)) {return;}\\n\\n        source = context.createBufferSource();\\n        tracksPlayed.push({\\n          source: source,\\n          responseURL: request.responseURL\\n        });\\n        source.buffer = buffer;\\n        source.connect(context.destination);\\n        source.loop = true;\\n\\n        if (offset == 0) {\\n          source.start();\\n          offset = context.currentTime;\\n        } else {\\n          var relativeTime = context.currentTime - offset;\\n          var beats = relativeTime / tempo;\\n          var remainder = beats - Math.floor(beats);\\n          var delay = tempo - (remainder*tempo);\\n          source.start(context.currentTime+delay,relativeTime+delay);\\n        }\\n\\n\\n      }, function(e) {\\n        console.log(\\'Error decoding audio data:\\' + e);\\n      });\\n    } else {\\n      console.log(\\'Audio didn\\\\\\'t load successfully; error code:\\' + request.statusText);\\n    }\\n  }\\n  request.send();\\n}\\n\\nvar tracks = document.getElementsByClassName(\\'track\\');\\n\\nfor (var i = 0, len = tracks.length; i < len; i++) {\\n  tracks[i].addEventListener(\\'click\\', function(e){\\n    playTrack(this.href);\\n    e.preventDefault();\\n  });\\n}\\n\\n</script><script>\\nvar buttonsClicked = 0;\\n  function vidplay() {\\n      var video1 = document.getElementById(\\\"Video1\\\");\\n      var video2 = document.getElementById(\\\"Video2\\\");\\n      var video3 = document.getElementById(\\\"Video3\\\");\\n      var video4 = document.getElementById(\\\"Video4\\\");\\n      var video5 = document.getElementById(\\\"Video5\\\");\\n\\n      var button = document.getElementsByClassName(\\\"round-button\\\").value = ++buttonsClicked;\\n\\n      /*if (video.paused) {\\n           video.play();\\n           button.textContent = \\\"||\\\";\\n       } else {\\n           video.pause();\\n           button.textContent = \\\">\\\";\\n  */\\n    if (buttonsClicked === 1 ){\\n    video1.play();\\n    } else if(buttonsClicked === 2) {\\n    video2.play();\\n    video1.pause();\\n    video1.remove();\\n    } else if(buttonsClicked === 3) {\\n    video3.play();\\n    video2.pause();\\n    video2.remove();\\n    }  else if(buttonsClicked === 4) {\\n    video4.play();\\n    video3.pause();\\n    video3.remove();\\n    }  else if(buttonsClicked === 5) {\\n    video5.play();\\n    video4.pause();\\n    video4.remove();\\n    } \\n  }\\n\\n  function restart() {\\n      var video = document.getElementById(\\\"Video1\\\");\\n      video.currentTime = 0;\\n     }\\n\\n  function skip(value) {\\n      var video = document.getElementById(\\\"Video1\\\");\\n      video.currentTime += value;\\n     }      \\n\\n   </script><script type=\\\"text/javascript\\\">\\n\\n       var loading_screen = pleaseWait({\\n       logo: \\\"assets/images/smirnoff-logo.png\\\",\\n       backgroundColor: \\'#fff5c3\\',\\n       loadingHtml: \\\"<div class=\\'spinner\\'><div class=\\'double-bounce1\\'><div class=\\'double-bounce2\\'></div></div>\\\"\\n });\\n\\nsetTimeout(function () {\\nloading_screen.finish();\\n}, 10000);\\n\\n\\n </script></html>\");\n$templateCache.put(\"app/components/navbar/navbar.html\",\"<ul class=\\\"nav navbar-nav navbar-right acme-navbar-text\\\"><li>Application was created {{ vm.relativeDate }}.</li></ul>\");}]);"],"sourceRoot":"/source/"}